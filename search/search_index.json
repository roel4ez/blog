{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to my blog! {{ blog_content }}","title":"Welcome"},{"location":"#welcome","text":"Welcome to my blog! {{ blog_content }}","title":"Welcome"},{"location":"tags/","text":"Tags {{ tag_content }}","title":"Tags"},{"location":"tags/#tags","text":"{{ tag_content }}","title":"Tags"},{"location":"blog/github-action-turn-on-off-vm/","text":"New repo I created a new repo on github which contains a Github Action to turn on/off or deallocate a VM on Azure","title":"Github Action for managing Azure VM"},{"location":"blog/github-action-turn-on-off-vm/#new-repo","text":"I created a new repo on github which contains a Github Action to turn on/off or deallocate a VM on Azure","title":"New repo"},{"location":"blog/mkdocs-mike-ghpages/","text":"Setup install python + pip pip install mkdocs pip install mkdocs-material pip install mike Branching docs should live in a separated repository. Working with docs Documentation is generated by the tools mkdocs and mkdocs-material . These tools generate a static website based on a configuration file and a set of markdown files. The static website is hosted on GitHub Pages. Documentation is available in a detached branch docs/main . This branch is locked and only accepts PRs. Two Actions are triggered by the PR: On PR creation: Markdown linting and link checking On PR merge: deployment of dev version of docs website Deployment For deployment, the additional toolset mike is used. This tool allows us to deploy multiple versions of the documentation. There is a manual GitHub Action to deploy a specific version. local development For local development, use the docker-container provided by mkdocs-material . Run docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material in the root directory of the docs to get a copy running on http://localhost:8000 Alternitively, install the required pip packages: install python + pip pip install mkdocs pip install mkdocs-material # optional pip install mike configuration The file mkdocs.yml provides the main configuration for the website, such as color and themes, plugins and extension. The TOC is also defined in the config file, under the section nav . Currently, new pages are not automatically added to the TOC.","title":"Documentation with mkdocs and GitHub Pages"},{"location":"blog/mkdocs-mike-ghpages/#setup","text":"install python + pip pip install mkdocs pip install mkdocs-material pip install mike","title":"Setup"},{"location":"blog/mkdocs-mike-ghpages/#branching","text":"docs should live in a separated repository.","title":"Branching"},{"location":"blog/mkdocs-mike-ghpages/#working-with-docs","text":"Documentation is generated by the tools mkdocs and mkdocs-material . These tools generate a static website based on a configuration file and a set of markdown files. The static website is hosted on GitHub Pages. Documentation is available in a detached branch docs/main . This branch is locked and only accepts PRs. Two Actions are triggered by the PR: On PR creation: Markdown linting and link checking On PR merge: deployment of dev version of docs website","title":"Working with docs"},{"location":"blog/mkdocs-mike-ghpages/#deployment","text":"For deployment, the additional toolset mike is used. This tool allows us to deploy multiple versions of the documentation. There is a manual GitHub Action to deploy a specific version.","title":"Deployment"},{"location":"blog/mkdocs-mike-ghpages/#local-development","text":"For local development, use the docker-container provided by mkdocs-material . Run docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material in the root directory of the docs to get a copy running on http://localhost:8000 Alternitively, install the required pip packages: install python + pip pip install mkdocs pip install mkdocs-material # optional pip install mike","title":"local development"},{"location":"blog/mkdocs-mike-ghpages/#configuration","text":"The file mkdocs.yml provides the main configuration for the website, such as color and themes, plugins and extension. The TOC is also defined in the config file, under the section nav . Currently, new pages are not automatically added to the TOC.","title":"configuration"}]}